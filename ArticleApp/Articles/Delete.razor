@page "/Articles/Delete/{Id:int}"

@using ArticleApp.Models.Articles;
@inject IArticleRepository ArticleRepository
@inject NavigationManager NavigationManager /* 페이지 이동 */
@inject IJSRuntime JSRuntime /* 자바스크립트 호출 */

<h3>Delete</h3>
<hr />

<div class="container">
    <div class="row">
        <div class="col-md-12">

            <!-- 받아온 Id의 Model.Id 출력 -->
            <div class="form-group">
                <label for="id">ID :</label> @Model.Id
            </div>

            <!-- 받아온 Id의 Model.Title 출력 -->
            <div class="form-group">
                <label for="id">Title :</label> @Model.Title
            </div>

            <!-- 받아온 Id의 Model.Content 출력 -->
            <div class="form-group">
               @Model.Content
            </div>

            <!-- Navi 버튼선언 -->
            <div class="form-group">
                <a href="/Articles/Delete/@Model.Id" class="btn btn-danger" @onclick="btnDelete_Click">Delete</a>
                <a href="/Articles/Details/@Model.Id" class="btn btn-primary">Cancel</a>
            </div>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    public Article Model { get; set; } = new Article();

    private string lblContext = "";

    protected override async Task OnInitializedAsync()
    {
        Model = await ArticleRepository.GetArticleByIdAsync(Id);

    }

    /// <summary>
    /// 삭제버튼 클릭
    /// </summary>
    protected async void btnDelete_Click()
    {
        // confirm (== JS MessageBox 호출)
        // window.confirm("") {};

        bool isDelete = await JSRuntime.InvokeAsync<bool>("confirm", $"{Id}번 글을 정말로 삭제하시겠습니까?");

        if (isDelete)
        {
            await ArticleRepository.DeleteArticleAsync(Id); // 삭제 로직 호출

            NavigationManager.NavigateTo("/Articles/Index"); // 리스트 페이지로 이동
        }
        else
        {
            // window.alert("취소 되었습니다")
            await JSRuntime.InvokeAsync<object>("alert", "취소되었습니다.");
        }

    }

}
